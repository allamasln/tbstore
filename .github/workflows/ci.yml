name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: |
          cd client
          yarn install
      - name: Lint
        run: |
          cd client
          yarn run eslint
      - name: Build
        run: |
          cd client
          yarn run build
      - name: Test
        run: |
          cd client
          yarn run test
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get sha-short
        uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 7
      - run: echo $SHA
      - name: Build and push api server image
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:api"
          push: true
          tags: |
            allamasln/tbs-api:latest
            allamasln/tbs-api:sha-${{ env.SHA }}
      - name: Build and push client-prod
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:client"
          file: "./Dockerfile.prod"
          push: true
          tags: |
            allamasln/tbs-client-prod:latest
            allamasln/tbs-client-prod:sha-${{ env.SHA }}
      - name: Stop tbs-1
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            docker-compose down
      - name: Deploy Stack to bts-1
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            make run-prod
